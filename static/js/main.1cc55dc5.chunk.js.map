{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","idx","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","loader_default","loader_movies","m","id","medium_cover_image","this","console","log","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wTA8BeA,MAjBf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACG,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACd,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACVD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACP,wBAAIC,IAAKD,EAAKL,UAAU,iBAAiBI,OAEjD,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UCqCGC,G,iNAvDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAEkCC,IAAMC,IAAI,4DAF5C,gBAEcJ,EAFd,EAEFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAHzB,2C,EAUZQ,eAAiB,WACf,OACE,yBAAKlB,UAAU,UACb,0BAAMA,UAAU,eAAhB,gB,EAKNmB,cAAgB,WAAO,IACbR,EAAW,EAAKF,MAAhBE,OACR,OACE,yBAAKX,UAAU,UACZW,EAAOR,KAAI,SAAAiB,GACV,OAAO,kBAAC,EAAD,CACLd,IAAKc,EAAEC,GACPA,GAAID,EAAEC,GACN1B,KAAMyB,EAAEzB,KACRC,MAAOwB,EAAExB,MACTC,QAASuB,EAAEvB,QACXC,OAAQsB,EAAEE,mBACVvB,OAAQqB,EAAErB,c,mFAvBlBwB,KAAKX,c,+BA8BG,IACAF,EAAca,KAAKd,MAAnBC,UAGR,OAFAc,QAAQC,IAAI,aAEL,yBAAKzB,UAAU,OAAf,IACHU,EACEa,KAAKL,iBACLK,KAAKJ,qB,GAlDGO,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1cc55dc5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nfunction Movie({ year, title, summary, poster, genres }) {\n    return (\n       <div className=\"movie\">\n           <img src={poster} alt={title} title={title} />\n           <div className=\"movie__data\">\n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            <ul className=\"movie__genres\">{\n                genres.map((genre, idx) => \n                    <li key={idx} className=\"genres__genre\">{genre}</li>\n            )}</ul>\n            <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n           </div>\n       </div>\n    )\n}\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  getMovies = async () => {\n    // proxy for the temporary api (2020.03.14 - 'https://yts.mx/api/v2/list_movies.json')\n    const { data: { data: { movies }}} =  await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n    this.setState({ movies, isLoading: false })\n  }\n\n  componentDidMount(){\n    this.getMovies()\n  }\n\n  loader_default = () => {\n    return (\n      <div className=\"loader\">\n        <span className=\"loader_text\">Loading...</span>\n      </div>\n    )\n  }\n\n  loader_movies = () => {\n    const { movies } = this.state;\n    return (\n      <div className=\"movies\">\n        {movies.map(m => {\n          return <Movie \n            key={m.id}\n            id={m.id} \n            year={m.year} \n            title={m.title} \n            summary={m.summary} \n            poster={m.medium_cover_image}\n            genres={m.genres}\n            />\n        })}\n      </div>\n    )\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    console.log(\"RENDERED!\")\n\n    return <div className=\"App\" > {\n        isLoading \n        ? this.loader_default()\n        : this.loader_movies()\n      } \n    </div>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}